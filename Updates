---------------------------------------------------------------------------------------------------------------------------
Oscar 4/23 - Reading assignment (Thoughts)
- Will need a scanner in main class that finds ORIGIN or goes next line,
  eventually reading all inputs until it sees // or hits 60 characters.
  Shouldn't be too much more than the scanner and some if statements, creating a sequence object? 
- From what I can understand sequences (length 60) can be broken up into subsequences (length k) 
  These subsequences are between 1 and 31 in length, characters overlap between subsequences in a sequence. (See 3.2)
  These subsequences are represented in a long with the characters being 2-bit binary numbers. 
  Subsequences are stored in TreeObjects, which are what is put into BTreeNodes which make up the BTree of the sequence. 
- Not sure exactly how to keep the root node in memory using java
- Also not really sure how to implement an Object Cache so that it improves performance. 
---------------------------------------------------------------------------------------------------------------------------
Oscar 4/25 - Weekend work
- Added name to authors on all files
- Uploaded test .gbk files to repo
- Moved BTree class and BTreeNode class to their own separate file, out of GeneBankCreateBTree.java
- Wrote Scanner to scan sequence from .gbk files. 
---------------------------------------------------------------------------------------------------------------------------
Michael 4/27 -Meeting summary
-Merged Oscars fork with original Master branch updating Btree files and Scanner implementaion in GeneBankCreateBTree.java
-Went over next step for the project: Oscar-Continue to further implement subsequencing logic, Michael-Further implement
BTree, Zahra-Will be going over project spects to find what she'd like to begin on, Dillon- Feel free to do the same as 
Zahra.
-Communication will be further pressed through google hangouts group for less critical information and this file for critical
information pertaining to the direct status of the project, we will also be holding zoom meetings at least once a week as needed
to merge everyones work to the master Branch in the original repository. 
-Finally I will be removing the branches I made as there is an issue with accessability so please create forks as oscar did
for your own personal versions of the current project and so forth. 
---------------------------------------------------------------------------------------------------------------------------
Oscar 4/29 - Added long conversion of subsequences
- Slightly modified BTree to have a placeholder add method I could call from GeneBankCreateBTree.java
- Modified BTreeNode from original to only have one key, the long, being passed in through the constructor along with the min_degree,
  as well as giving it left and right child nodes.
    - Not really sure where we are getting min_degree from
    - These changes were to make it compatible with the long and the way I am currently envisioning the BTree, not sure if these are
      correct and feel free to change them if need be, just let me know so I can mess with GeneBankCreateBTree implementation.
- Added the functionality to GeneBankCreateBTree.java so that it now takes int the full sequence and breaks it down into subsequences
  of length k. It then converts each character of the subsequence into binary and creates a long, which is made the key of a BTreeNode
  and added to the BTree. 
    - The exact implementation could change based on how the BTree ends up being written, currently I just put some placeholders in
      there. 
    - I looked into using the Random Access File to read and write the long bits but I couldn't figure out how to do that without
      making a completely new file, which I don't think is something that this part of the code should do. I think we will need this 
      however when we are writing to a new file for the btree file and maybe the debugging output. 
- I want to keep moving on this project so I will be looking for more things to work on this week and over the weekend. 
---------------------------------------------------------------------------------------------------------------------------
Michael 4/30 -BTree, BTreeNode, BTreeObject, and updated my cache to implement BTreeNodes
-So I tenatively finished the files above still need further testing,
-implemented all required methods for files above (I think)
-implemented I/O for meta data storage with random access file (except due to not having createBTree.java done I'm not sure if my
data sizes are correct but that should be an easy fix.
---------------------------------------------------------------------------------------------------------------------------
